---

name: musashi
category: targets
description: A set of labs for understanding modern application features.
href: https://cors-dojo.test:8443

install:
  - name: Get the latest release of musashi
    git:
      repo: https://github.com/SamuraiWTF/musashi-js.git
      dest: /opt/targets/musashi

  - name: Install musashi with yarn
    yarn:
      path: /opt/targets/musashi

  - name: Script to start Musashi
    copy:
      dest: /usr/local/bin/start_musashi.sh
      content: |
        #!/bin/bash
        cd /opt/targets/musashi
        exec yarn start
      mode: 0744

  - name: Create service descriptor for wtf-musashi.service
    copy:
      dest: /etc/systemd/system/wtf-musashi.service
      content: |
        [Unit]
        Description=Musashi Target service
        After=network.target

        [Service]
        Type=simple
        User=root
        WorkingDirectory=/opt/targets/musashi
        ExecStart=/usr/local/bin/start_musashi.sh
        Restart=on-failure
        RestartSec=5
        StandardOutput=syslog
        StandardError=syslog
        SyslogIdentifier=musashi

        [Install]
        WantedBy=multi-user.target
      mode: 0744

  - name: Generate musashi .env file
    copy:
      dest: /opt/targets/musashi/.env
      content: |
        CORS_API_PORT=3020
        CORS_API_HOST=api.cors.test
        CORS_API_PROXY_PORT=8443
        CORS_CLIENT_HOST=cors-dojo.test
        CORS_CLIENT_PORT=3021
        OAUTH_PROVIDER_PORT=3030
        OAUTH_CLIENT_PORT=3031
        CSP_APP_PORT=3041
        USE_TLS=TRUE
      mode: 0744

  - name: Setup hosts file entry for cors-dojo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   cors-dojo.test'

  - name: Setup hosts file entries for api.cors
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.9   api.cors.test'

  - name: Setup hosts file entry for csp-dojo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   csp-dojo.test'

  - name: Setup hosts file entry for jwt-demo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   jwt-demo.test'

  - name: Setup nginx reverse-proxy config for CORS client
    reverseproxy:
      hostname: 'cors-dojo.test'
      proxy_pass: 'http://localhost:3021'

  - name: Setup nginx reverse-proxy config for CORS API
    reverseproxy:
      hostname: 'api.cors.test'
      proxy_pass: 'http://localhost:3020'

  - name: Setup nginx reverse-proxy config for CSP dojo
    reverseproxy:
      hostname: 'csp-dojo.test'
      proxy_pass: 'http://localhost:3041'

  - name: Setup nginx reverse-proxy config for JWT demo
    reverseproxy:
      hostname: 'jwt-demo.test'
      proxy_pass: 'http://localhost:3050'

  - service:
      name: nginx
      state: restarted
  - command:
      cmd: systemctl daemon-reload

remove:
  - service:
      name: wtf-musashi
      state: stopped
  - rm:
      path:
        - /opt/targets/musashi
        - /usr/local/bin/start_musashi.sh
        - /etc/systemd/system/wtf-musashi.service
        - /opt/targets/musashi/.env

  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   cors-dojo.test'
      state: absent
  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   api.cors.test'
      state: absent
  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   csp-dojo.test'
      state: absent
  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   jwt-demo.test'
      state: absent

  - name: Remove nginx reverse-proxy config for CORS client
    reverseproxy:
      hostname: 'cors-dojo.test'
  - name: Remove nginx reverse-proxy config for CORS API
    reverseproxy:
      hostname: 'api.cors.test'
  - name: Remove nginx reverse-proxy config for CSP dojo
    reverseproxy:
      hostname: 'csp-dojo.test'
  - name: Remove nginx reverse-proxy config for JWT demo
    reverseproxy:
      hostname: 'jwt-demo.test'

  - service:
      name: nginx
      state: restarted
  - command:
      cmd: systemctl daemon-reload


start:
  - service:
      name: wtf-musashi
      state: running

stop:
  - service:
      name: wtf-musashi
      state: stopped

status:
  running:
    started:
      service: wtf-musashi
  installed:
    exists:
      path: /opt/targets/musashi
