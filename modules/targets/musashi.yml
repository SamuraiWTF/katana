---

name: musashi
category: targets
description: A set of labs for understanding modern application features.
href: https://cors-dojo.test:8443

install:
  - name: Make sure docker service is running
    service:
      name: docker
      state: running

  - name: Install Musashi docker container
    docker:
      name: musashi
      image: ghcr.io/samuraiwtf/musashi-js:latest
      env:
        CORS_API_PORT: "3020"
        CORS_API_HOST: "api.cors.test"
        CORS_API_PROXY_PORT: "8443"
        CORS_CLIENT_HOST: "cors-dojo.test"
        CORS_CLIENT_PORT: "3021"
        OAUTH_PROVIDER_PORT: "3030"
        OAUTH_CLIENT_PORT: "3031"
        CSP_APP_PORT: "3041"
        JWT_HOST: "jwt-demo.test"
        JWT_PORT: "3050"
        USE_TLS: "TRUE"
      ports:
        3020/tcp: 3020  # CORS API
        3021/tcp: 3021  # CORS Client
        3030/tcp: 3030  # OAuth Provider
        3031/tcp: 3031  # OAuth Client
        3041/tcp: 3041  # CSP Demo
        3050/tcp: 3050  # JWT Demo

  - name: Setup hosts file entries for CORS API
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   api.cors.test'

  - name: Setup hosts file entries for CORS Client
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   cors-dojo.test'

  - name: Setup hosts file entries for JWT Demo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   jwt-demo.test'

  - name: Setup hosts file entries for CSP Demo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   csp-dojo.test'

  - name: Create nginx config for CORS API
    reverseproxy:
      hostname: 'api.cors.test'
      proxy_pass: 'http://localhost:3020'
      ssl: true
      headers:
        - 'proxy_set_header X-Forwarded-Proto $scheme'
        - 'proxy_set_header X-Forwarded-Port 8443'

  - name: Create nginx config for CORS Client
    reverseproxy:
      hostname: 'cors-dojo.test'
      proxy_pass: 'http://localhost:3021'
      ssl: true
      headers:
        - 'proxy_set_header X-Forwarded-Proto $scheme'
        - 'proxy_set_header X-Forwarded-Port 8443'

  - name: Create nginx config for JWT Demo
    reverseproxy:
      hostname: 'jwt-demo.test'
      proxy_pass: 'http://localhost:3050'
      ssl: true
      headers:
        - 'proxy_set_header X-Forwarded-Proto $scheme'
        - 'proxy_set_header X-Forwarded-Port 8443'

  - name: Create nginx config for CSP Demo
    reverseproxy:
      hostname: 'csp-dojo.test'
      proxy_pass: 'http://localhost:3041'
      ssl: true
      headers:
        - 'proxy_set_header X-Forwarded-Proto $scheme'
        - 'proxy_set_header X-Forwarded-Port 8443'

  - service:
      name: nginx
      state: restarted

remove:
  - service:
      name: docker
      state: running
  - docker:
      name: musashi

  - name: Remove hosts file entries for CORS API
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   api.cors.test'
      state: absent

  - name: Remove hosts file entries for CORS Client
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   cors-dojo.test'
      state: absent

  - name: Remove hosts file entries for JWT Demo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   jwt-demo.test'
      state: absent

  - name: Remove hosts file entries for CSP Demo
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.1   csp-dojo.test'
      state: absent

  - name: Remove nginx config for CORS API
    reverseproxy:
      hostname: 'api.cors.test'

  - name: Remove nginx config for CORS Client
    reverseproxy:
      hostname: 'cors-dojo.test'

  - name: Remove nginx config for JWT Demo
    reverseproxy:
      hostname: 'jwt-demo.test'

  - name: Remove nginx config for CSP Demo
    reverseproxy:
      hostname: 'csp-dojo.test'

start:
  - docker:
      name: musashi
      state: running

stop:
  - docker:
      name: musashi
      state: stopped

status:
  running:
    started:
      docker: musashi
  installed:
    exists:
      docker: musashi
