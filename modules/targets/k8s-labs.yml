---

    name: k8s-labs
    category: targets
    description: An insecure k8s cluster to hack on.
    href: http://k8s-labs.wtf
    
    install:
      - name: Install conntrack in root path
        command:
          cmd: apt install conntrack

      - name: Get the k8s-labs repo
        git:
          repo: https://github.com/ProfessionallyEvil/k8s-labs.git
          dest: /opt/targets/k8s-labs
    
      - name: Download minikube bin
        get_url:
          url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          dest: /usr/bin/minikube
    
      - name: Make minikube executable
        command:
          cmd: chmod +x /usr/bin/minikube
    
      - name: Download kubectl bin
        command:
          cwd: /usr/bin/
          unsafe: True
          shell: True
          cmd: "curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl"
    
      - name: Make kubectl executable
        command:
          cmd: chmod +x /usr/bin/kubectl
    
      - name: Setup cluster 
        command: 
          cwd: /opt/targets/k8s-labs
          cmd: /opt/targets/k8s-labs/setup.sh
    
      - name: Setup web app hosts file entry (wtf)
        lineinfile:
          dest: /etc/hosts
          line: '127.0.0.1  k8s-labs.wtf'
    
      - name: Set api hosts file entry (wtf)
        lineinfile:
          dest: /etc/hosts
          line: '127.0.0.1  api.k8s-labs.wtf'

    remove:
      - name: Remove repo
        rm:
          path: /opt/targets/k8s-labs
      - name: Delete cluster
        command:
          cmd: minikube delete
      - name: Remove images
        command:
          unsafe: True
          shell: True
          cmd: docker rmi $(docker images --format '{{.Repository}}:{{.Tag}}' | grep 'k8slabs')
      - name: Cleanup .kube dir
        rm:
          path: /root/.kube 
      - name: Cleanup .minikube dir
        rm:
          path: /root/.minikube
      - name: Remove minikube
        rm:
          path: /usr/bin/minikube
      - name: Remove kubectl
        rm:
          path: /usr/bin/kubectl
      - name: Remove nginx conf
        rm:
          path: /etc/nginx/conf.d/k8s-labs.conf
      - name: Remove api.k8s-labs nginx conf
        rm:
          path: /etc/nginx/conf.d/api.k8s-labs.conf
    
    start:
      - service:
          name: docker
          state: running
      - command:
          cmd: minikube start --force

      # hacks to make this work more dynamically without supporting state in katana manifests
      - name: Write cluster IP to file
        command:
          unsafe: True
          shell: True
          cwd: /opt/targets/k8s-labs
          cmd: "/usr/bin/minikube ip > /opt/targets/k8s-labs/cluster_ip.txt"

      - name: Set up web app nginx reverse-proxy config
        copy:
          dest: /etc/nginx/conf.d/k8s-labs.conf
          content: |
            server {
              listen 80;
              server_name k8s-labs.wtf k8s-labs.test;
              location / {
                proxy_pass http://{{CLUSTER_IP}}:31380;
              }
            }
          mode: 0644

      - name: Set up api nginx reverse-proxy config
        copy:
          dest: /etc/nginx/conf.d/api.k8s-labs.conf
          content: |
            server {
              listen 80;
              server_name api.k8s-labs.wtf api.k8s-labs.test;
              location / {
                proxy_pass http://{{CLUSTER_IP}}:31337;
              }
            }
          mode: 0644

      - name: Set cluster IP in nginx configs
        command:
          shell: True
          unsafe: True
          cmd: sed -i "s/{{CLUSTER_IP}}/$(cat /opt/targets/k8s-labs/cluster_ip.txt)/g" /etc/nginx/conf.d/*k8s-labs.conf

      - service:
          name: nginx
          state: restarted

    stop:
      - service:
          name: docker
          state: running
      - command:
          cmd: minikube stop
    
    status:
      running:
        started:
          docker: minikube 
      installed:
        exists:
          docker: minikube 
