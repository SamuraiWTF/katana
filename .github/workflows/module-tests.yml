name: Module Tests

on:
  push:
    paths:
      - 'modules/**'
    branches: [ main ]
  pull_request:
    paths:
      - 'modules/**'
    branches: [ main ]

jobs:
  determine-tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comparing changes
          
      - id: set-matrix
        run: |
          # Get changed files in modules directory
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '^modules/' || true)
          else
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep '^modules/' || true)
          fi
          
          # Extract specific tool/target names from paths
          # Example: modules/tools/zap.yml -> zap
          COMPONENTS=$(echo "$CHANGED_FILES" | sed -n 's|^modules/[^/]*/\([^/]*\)\..*|\1|p' | sort -u)
          
          # Build matrix JSON
          PACKAGES="["
          FIRST=true
          for COMPONENT in $COMPONENTS; do
            if [ -f "test/test-${COMPONENT}.sh" ]; then
              if [ "$FIRST" = true ]; then
                FIRST=false
              else
                PACKAGES="$PACKAGES,"
              fi
              PACKAGES="$PACKAGES\"$COMPONENT\""
            fi
          done
          PACKAGES="$PACKAGES]"
          
          # If no valid test files found, run all tests
          if [ "$PACKAGES" = "[]" ]; then
            PACKAGES='["all"]'
          fi
          
          echo "matrix={\"package\":$PACKAGES}" >> $GITHUB_OUTPUT

  run-tests:
    needs: determine-tests
    uses: ./.github/workflows/package-test.yaml
    strategy:
      matrix: ${{fromJson(needs.determine-tests.outputs.matrix)}}
      fail-fast: false
    with:
      package-name: ${{ matrix.package }}
